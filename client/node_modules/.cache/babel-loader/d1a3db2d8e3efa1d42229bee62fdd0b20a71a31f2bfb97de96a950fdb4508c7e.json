{"ast":null,"code":"var _jsxFileName = \"/Users/hninlwin/llm-test/llm-test/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\n\n// function App() {\n//   const [question, setQuestion] = useState('');\n//   const [answerFormat, setAnswerFormat] = useState('');\n//   const [result, setResult] = useState('');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await fetch('http://127.0.0.1:5000/query_open_ai', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({\n//           prompt: `${question}\\n${answerFormat}`,\n//         }),\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! Status: ${response.status}`);\n//       }\n\n//       const data = await response.json();\n//       setResult(data.body);\n//     } catch (error) {\n//       console.error('Error:', error);\n//       setResult('Error occurred');\n//     }\n//   };\n\n//   return (\n//     <div className='big-container'>\n//       <form className='submit-button' onSubmit={handleSubmit}>\n//         <label className=\"q-box-container\">\n//           Question:\n//           <input\n//             className=\"q-box\"\n//             type=\"text\"\n//             value={question}\n//             onChange={(e) => setQuestion(e.target.value)}\n//           />\n//         </label>\n//         <br />\n//         <label className=\"q-box-container\">\n//           Answer Format:\n//           <input\n//             className=\"q-box\"\n//             type=\"text\"\n//             value={answerFormat}\n//             onChange={(e) => setAnswerFormat(e.target.value)}\n//           />\n//         </label>\n//         <br />\n//         <button className=\"submit-box\" type=\"submit\">Submit</button>\n//       </form>\n//       <div>\n//         <h3>Result:</h3>\n//         <p>{result}</p>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [pdfFile, setPdfFile] = useState(null);\n  const [userQuestion, setUserQuestion] = useState('');\n  const [result, setResult] = useState('');\n  const [id, setID] = useState('');\n  const handleQuestionChange = event => {\n    setUserQuestion(event.target.value);\n  };\n  const handleFileChange = event => {\n    setPdfFile(event.target.files[0]);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const formData = new FormData();\n    if (pdfFile) {\n      formData.append(\"file\", pdfFile);\n    }\n    if (userQuestion) {\n      formData.append('question', userQuestion);\n    }\n    fetch(\"http://127.0.0.1:5000/process_pdf\", {\n      method: \"POST\",\n      body: formData\n    }).then(response => {\n      console.log(\"PDF file sent successfully\");\n      console.log(response);\n      return response.json();\n    }).then(data => {\n      setResult((data === null || data === void 0 ? void 0 : data.ans) || 'No answer found'); //name the same as python result\n      console.log(data === null || data === void 0 ? void 0 : data.ans);\n      setID(dat);\n    }).catch(error => {\n      console.error(\"Error\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"submit-button\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"q-box-container\",\n        htmlFor: \"question\",\n        children: \"Question:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"q-box\",\n        id: \"question\",\n        type: \"text\",\n        value: userQuestion,\n        onChange: handleQuestionChange,\n        placeholder: \"Ask your question here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"csv-block\",\n        htmlFor: \"file\",\n        children: \"Upload PDF file:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file\",\n        name: \"file\",\n        accept: \".pdf\",\n        onChange: handleFileChange,\n        className: \"mb-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-box\",\n        type: \"submit\",\n        disabled: !pdfFile || !userQuestion,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"result-box\",\n      children: [\"Result: \", result]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"igamskpgxqBSnPwMA2fW/h0T4EY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","pdfFile","setPdfFile","userQuestion","setUserQuestion","result","setResult","id","setID","handleQuestionChange","event","target","value","handleFileChange","files","handleSubmit","preventDefault","formData","FormData","append","fetch","method","body","then","response","console","log","json","data","ans","dat","catch","error","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","name","accept","disabled","_c","$RefreshReg$"],"sources":["/Users/hninlwin/llm-test/llm-test/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react'\nimport './App.css';\n\n\n// function App() {\n//   const [question, setQuestion] = useState('');\n//   const [answerFormat, setAnswerFormat] = useState('');\n//   const [result, setResult] = useState('');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await fetch('http://127.0.0.1:5000/query_open_ai', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({\n//           prompt: `${question}\\n${answerFormat}`,\n//         }),\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! Status: ${response.status}`);\n//       }\n\n//       const data = await response.json();\n//       setResult(data.body);\n//     } catch (error) {\n//       console.error('Error:', error);\n//       setResult('Error occurred');\n//     }\n//   };\n\n//   return (\n//     <div className='big-container'>\n//       <form className='submit-button' onSubmit={handleSubmit}>\n//         <label className=\"q-box-container\">\n//           Question:\n//           <input\n//             className=\"q-box\"\n//             type=\"text\"\n//             value={question}\n//             onChange={(e) => setQuestion(e.target.value)}\n//           />\n//         </label>\n//         <br />\n//         <label className=\"q-box-container\">\n//           Answer Format:\n//           <input\n//             className=\"q-box\"\n//             type=\"text\"\n//             value={answerFormat}\n//             onChange={(e) => setAnswerFormat(e.target.value)}\n//           />\n//         </label>\n//         <br />\n//         <button className=\"submit-box\" type=\"submit\">Submit</button>\n//       </form>\n//       <div>\n//         <h3>Result:</h3>\n//         <p>{result}</p>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\nfunction App() {\n  const [pdfFile, setPdfFile] = useState(null);\n  const [userQuestion, setUserQuestion] = useState('');\n  const [result, setResult] = useState('');\n  const [id, setID] = useState('');\n\n  const handleQuestionChange = (event) => {\n    setUserQuestion(event.target.value);\n  }\n\n  const handleFileChange = (event) => {\n    setPdfFile(event.target.files[0]);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n  const formData = new FormData();\n\n  if (pdfFile) {\n    formData.append(\"file\", pdfFile);\n  }\n  if(userQuestion) {\n    formData.append('question', userQuestion);\n  }\n\n  fetch(\"http://127.0.0.1:5000/process_pdf\", {\n    method: \"POST\",\n    body: formData,\n  })\n    .then((response) => {\n      console.log(\"PDF file sent successfully\");\n      console.log(response)\n      return response.json();\n    })\n    .then((data) => {\n      setResult(data?.ans|| 'No answer found'); //name the same as python result\n      console.log(data?.ans)\n      setID(dat)\n    })\n    .catch((error) => {\n      console.error(\"Error\", error);\n    });\n  };\n\n  return (\n    <div className=\"form-container\">\n      <form onSubmit={handleSubmit} className=\"submit-button\">\n        <label className=\"q-box-container\" htmlFor=\"question\">\n          Question:\n        </label>\n        <input\n          className=\"q-box\"\n          id=\"question\"\n          type=\"text\"\n          value={userQuestion}\n          onChange={handleQuestionChange}\n          placeholder=\"Ask your question here\"\n        />\n        <label className=\"csv-block\" htmlFor=\"file\">\n          Upload PDF file:\n        </label>\n        <input\n          type=\"file\"\n          id=\"file\"\n          name=\"file\"\n          accept=\".pdf\"\n          onChange={handleFileChange}\n          className=\"mb-3\"\n        />\n        <button\n          className=\"submit-box\"\n          type=\"submit\"\n          disabled={!pdfFile || !userQuestion}\n        >\n          Submit\n        </button>\n      </form>\n      <p className=\"result-box\">Result: {result}</p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}