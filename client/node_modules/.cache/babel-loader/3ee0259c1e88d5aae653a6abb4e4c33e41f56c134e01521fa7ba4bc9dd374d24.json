{"ast":null,"code":"var _jsxFileName = \"/Users/hninlwin/llm-test/llm-test-proj/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [answerFormat, setAnswerFormat] = useState('');\n  const [result, setResult] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://127.0.0.1:5000/query_open_ai', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: `${question}\\n${answerFormat}`\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setResult(data.body);\n    } catch (error) {\n      console.error('Error:', error);\n      setResult('Error occurred');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"big-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"submit-button\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"q-box-container\",\n        children: [\"Question:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: question,\n          onChange: e => setQuestion(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Answer Format:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: answerFormat,\n          onChange: e => setAnswerFormat(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6ZaBmbrAGzsO+b38d3PVd17CMdY=\");\n_c = App;\nexport default App;\n\n// function App() {\n//   const [pdfFile, setPdfFIle] = useState(null)\n//   const [userQuestion, setUserQuestion] = useState('')\n//   const [result, setResult] = useState('')\n\n//   const handleQuestionChange = (event) => {\n//     setUserQuestion(event.target.value);\n//   }\n\n//   const handleFileChange = (event) => {\n//     setPdfFIle(event.target.files[0]);\n//   };\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n\n//     const formData = new FormData();\n\n//     if (pdfFile) {\n//       formData.append(\"pdf\", pdfFile);\n//     }\n//     fetch(\"http://127.0.0.1:5000/process-pdf\", {\n//       method: \"POST\",\n//       body: formData,\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setResult(data.result);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error\", error);\n//       });\n//   };\n\n//   return (\n//     <div className=\"form-container\">\n//       <form onSubmit={handleSubmit} className=\"submit-button\">\n//         <label className=\"q-box-container\" htmlFor=\"question\">\n//           Question:\n//         </label>\n//         <input\n//           className=\"q-box\"\n//           id=\"question\"\n//           type=\"text\"\n//           value={userQuestion}\n//           onChange={handleQuestionChange}\n//           placeholder=\"Ask your question here\"\n//         />\n//         <label className=\"csv-block\" htmlFor=\"file\">\n//           Upload PDF file:\n//         </label>\n//         <input\n//           type=\"file\"\n//           id=\"file\"\n//           name=\"file\"\n//           accept=\".pdf\"\n//           onChange={handleFileChange}\n//           className=\"mb-3\"\n//         />\n//         <button\n//           className=\"submit-box\"\n//           type=\"submit\"\n//           disabled={!pdfFile || !userQuestion}\n//         >\n//           Submit\n//         </button>\n//       </form>\n//       <p className=\"result-box\">Result: {result}</p>\n//     </div>\n//   );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","question","setQuestion","answerFormat","setAnswerFormat","result","setResult","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","prompt","ok","Error","status","data","json","error","console","className","children","onSubmit","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hninlwin/llm-test/llm-test-proj/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react'\nimport './App.css';\n\n\nfunction App() {\n  const [question, setQuestion] = useState('');\n  const [answerFormat, setAnswerFormat] = useState('');\n  const [result, setResult] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch('http://127.0.0.1:5000/query_open_ai', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          prompt: `${question}\\n${answerFormat}`,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      setResult(data.body);\n    } catch (error) {\n      console.error('Error:', error);\n      setResult('Error occurred');\n    }\n  };\n\n  return (\n    <div className='big-container'>\n      <form className='submit-button' onSubmit={handleSubmit}>\n        <label className=\"q-box-container\">\n          Question:\n          <input\n            type=\"text\"\n            value={question}\n            onChange={(e) => setQuestion(e.target.value)}\n          />\n        </label>\n        <br />\n        <label>\n          Answer Format:\n          <input\n            type=\"text\"\n            value={answerFormat}\n            onChange={(e) => setAnswerFormat(e.target.value)}\n          />\n        </label>\n        <br />\n        <button type=\"submit\">Submit</button>\n      </form>\n      <div>\n        <h3>Result:</h3>\n        <p>{result}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n// function App() {\n//   const [pdfFile, setPdfFIle] = useState(null)\n//   const [userQuestion, setUserQuestion] = useState('')\n//   const [result, setResult] = useState('')\n\n//   const handleQuestionChange = (event) => {\n//     setUserQuestion(event.target.value);\n//   }\n\n//   const handleFileChange = (event) => {\n//     setPdfFIle(event.target.files[0]);\n//   };\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n\n//     const formData = new FormData();\n\n//     if (pdfFile) {\n//       formData.append(\"pdf\", pdfFile);\n//     }\n//     fetch(\"http://127.0.0.1:5000/process-pdf\", {\n//       method: \"POST\",\n//       body: formData,\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setResult(data.result);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error\", error);\n//       });\n//   };\n\n//   return (\n//     <div className=\"form-container\">\n//       <form onSubmit={handleSubmit} className=\"submit-button\">\n//         <label className=\"q-box-container\" htmlFor=\"question\">\n//           Question:\n//         </label>\n//         <input\n//           className=\"q-box\"\n//           id=\"question\"\n//           type=\"text\"\n//           value={userQuestion}\n//           onChange={handleQuestionChange}\n//           placeholder=\"Ask your question here\"\n//         />\n//         <label className=\"csv-block\" htmlFor=\"file\">\n//           Upload PDF file:\n//         </label>\n//         <input\n//           type=\"file\"\n//           id=\"file\"\n//           name=\"file\"\n//           accept=\".pdf\"\n//           onChange={handleFileChange}\n//           className=\"mb-3\"\n//         />\n//         <button\n//           className=\"submit-box\"\n//           type=\"submit\"\n//           disabled={!pdfFile || !userQuestion}\n//         >\n//           Submit\n//         </button>\n//       </form>\n//       <p className=\"result-box\">Result: {result}</p>\n//     </div>\n//   );\n// }\n\n// export default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;QAClEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,MAAM,EAAG,GAAEhB,QAAS,KAAIE,YAAa;QACvC,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACO,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBT,QAAQ,CAACU,MAAO,EAAC,CAAC;MAC3D;MAEA,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;MAClChB,SAAS,CAACe,IAAI,CAACP,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BjB,SAAS,CAAC,gBAAgB,CAAC;IAC7B;EACF,CAAC;EAED,oBACER,OAAA;IAAK2B,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5B5B,OAAA;MAAM2B,SAAS,EAAC,eAAe;MAACE,QAAQ,EAAEpB,YAAa;MAAAmB,QAAA,gBACrD5B,OAAA;QAAO2B,SAAS,EAAC,iBAAiB;QAAAC,QAAA,GAAC,WAEjC,eAAA5B,OAAA;UACE8B,IAAI,EAAC,MAAM;UACXC,KAAK,EAAE5B,QAAS;UAChB6B,QAAQ,EAAGtB,CAAC,IAAKN,WAAW,CAACM,CAAC,CAACuB,MAAM,CAACF,KAAK;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRrC,OAAA;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNrC,OAAA;QAAA4B,QAAA,GAAO,gBAEL,eAAA5B,OAAA;UACE8B,IAAI,EAAC,MAAM;UACXC,KAAK,EAAE1B,YAAa;UACpB2B,QAAQ,EAAGtB,CAAC,IAAKJ,eAAe,CAACI,CAAC,CAACuB,MAAM,CAACF,KAAK;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRrC,OAAA;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNrC,OAAA;QAAQ8B,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACPrC,OAAA;MAAA4B,QAAA,gBACE5B,OAAA;QAAA4B,QAAA,EAAI;MAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChBrC,OAAA;QAAA4B,QAAA,EAAIrB;MAAM;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnC,EAAA,CA5DQD,GAAG;AAAAqC,EAAA,GAAHrC,GAAG;AA8DZ,eAAeA,GAAG;;AAGlB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}